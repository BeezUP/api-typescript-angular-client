/**
 * Marketplaces - Orders
 * The features exposed in this API are centered around managing Orders harvested from your configured marketplaces.\\ This includes: - fetching current information (as known by BeezUP) for a single or multiple Orders, - requesting Order harvest to synchronize your marketplaces and BeezUP accounts, - changing BeezUP data and requesting changes to your marketplaces (accepting, shipping, etc), - configuring automatic changes to marketplace based our newly fetched data, - creating and exporting reports for your Orders. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export interface BeezUPCommonLinkParameter3 {
    /**
     * The value of the parameter. It can be an integer a string or an object.
     */
    "value"?: any;
    "required"?: boolean;
    /**
     * * path: if the parameter must be pass in the path uri * header: if the parameter must be passed in http header * query: if the parameter must be passed in querystring * body: if the paramter must be passed in the body 
     */
    "in"?: BeezUPCommonLinkParameter3.ModelInEnum;
    /**
     * The value type of the parameter
     */
    "type"?: BeezUPCommonLinkParameter3.TypeEnum;
    /**
     * This parameter expect the values indicated in this list of values.
     */
    "lovLink"?: models.BeezUPCommonLOVLink2;
    /**
     * If true, you MUST use indicate a value from the list of values otherwise it's a freetext
     */
    "lovRequired"?: boolean;
    /**
     * description of the parameter
     */
    "description"?: string;
    /**
     * schema of the parameter
     */
    "schema"?: string;
}

export namespace BeezUPCommonLinkParameter3 {
    export enum ModelInEnum {
        Path = <any> 'path',
        Header = <any> 'header',
        Query = <any> 'query',
        Body = <any> 'body'
    }
    export enum TypeEnum {
        String = <any> 'string',
        Integer = <any> 'integer',
        Number = <any> 'number',
        Boolean = <any> 'boolean',
        Object = <any> 'object',
        Array = <any> 'array',
        Date = <any> 'date',
        DateTime = <any> 'date-time'
    }
}
